import os
import csv
import telebot
import requests
import sqlite3
import data

from telebot import types
from bs4 import BeautifulSoup

token = os.environ['TOKEN']
bot = telebot.TeleBot(token, parse_mode=None)
URL = "https://al-school.ru/category/–Ω–æ–≤–æ—Å—Ç–∏/"


def is_user_admin(telegram_id):
    with sqlite3.connect("school_db.sqlite") as con:
        cur = con.cursor()
        for i in cur.execute("""SELECT telegram_id FROM admins""").fetchall():
            if str(telegram_id) == i[0]:
                return True
        return False


def is_user_in_database(telegram_id):
    with sqlite3.connect("school_db.sqlite") as con:
        cur = con.cursor()
        for i in cur.execute("""SELECT student_id FROM students""").fetchall():
            if str(telegram_id) == i[0]:
                return True
        return False


def start_buttons(message):
    """Main buttons"""
    admin = is_user_admin(message.chat.id)
    if admin:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        table = types.KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏—èüìã")
        service = types.KeyboardButton("–ü–µ—Ä—Å–æ–Ω–∞–ªüßë‚Äçüè´")
        cabinets = types.KeyboardButton("–ö–∞–±–∏–Ω–µ—Ç—ãüö™")
        additional_lessons = types.KeyboardButton("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—èüóí")
        news = types.KeyboardButton("–ù–æ–≤–æ—Å—Ç–∏üì∞")
        problem = types.KeyboardButton("–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ‚ùó")
        markup.add(table, service, cabinets, additional_lessons, news, problem)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —Ç–µ–º—É:', reply_markup=markup)
    else:
        user_in_database = is_user_in_database(message.chat.id)
        if user_in_database:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            table = types.KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏—èüìã")
            service = types.KeyboardButton("–ü–µ—Ä—Å–æ–Ω–∞–ªüßë‚Äçüè´")
            cabinets = types.KeyboardButton("–ö–∞–±–∏–Ω–µ—Ç—ãüö™")
            additional_lessons = types.KeyboardButton("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—èüóí")
            news = types.KeyboardButton("–ù–æ–≤–æ—Å—Ç–∏üì∞")
            problem = types.KeyboardButton("–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ‚ùó")
            db_delete = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Öüö´")
            markup.add(table, service, cabinets, additional_lessons, news, problem, db_delete)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —Ç–µ–º—É:', reply_markup=markup)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(*list(types.KeyboardButton(f"{i}") for i in range(5, 12)))
            bot.send_message(message.chat.id, '–í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å: ', reply_markup=markup)


@bot.message_handler(commands=['start'])
def start_message(message):
    markup_site = types.InlineKeyboardMarkup()
    markup_site.add(types.InlineKeyboardButton("–ù–∞—à —Å–∞–π—Ç", url=URL))
    bot.send_photo(message.chat.id, open('school_photo.png', 'rb'))
    bot.send_message(message.chat.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç —à–∫–æ–ª—ã ‚Ññ11 –≥.–ù–∞–ª—å—á–∏–∫–∞."
                                      " –Ø –æ—Ç–≤–µ—á—É –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã üòâ", reply_markup=markup_site)
    if is_user_admin(message.chat.id):
        bot.send_message(message.chat.id, '–í—ã –≤–æ—à–ª–∏ —Å –∞–¥–º–∏–Ω-–∞–∫–∫–∞—É–Ω—Ç–∞\n'
                                          '–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏:\n'
                                          '/alert - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n'
                                          '–ß—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å CSV-—Ñ–∞–π–ª —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º, —É–∫–∞–∑–∞–≤ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–ª–∞—Å—Å\n'
                                          'CSV-—Ñ–∞–π–ª –º–æ–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ School Schedule')

    start_buttons(message)


@bot.message_handler(commands=['alert'])
def send_alert(message):
    if is_user_admin(message.chat.id):
        if message.text == '/alert':
            bot.send_message(message.chat.id,
                             '–ò–Ω—Å—Ç—Ä—É—Ü–∫–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–æ–º–∞–Ω–¥—ã:\n'
                             '/alert <–ö–õ–ê–°–°/–í–°–ï> <–°–û–û–ë–©–ï–ù–ò–ï>\n'
                             '–ù–∞–ø—Ä–∏–º–µ—Ä:\n'
                             '/alert 11–ê –°–æ–æ–±—â–µ–Ω–∏–µ (–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è 11–ê –∫–ª–∞—Å—Å—É)\n'
                             '–ò–õ–ò\n'
                             '/alert –í–°–ï –°–æ–æ–±—â–µ–Ω–∏–µ (–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º —É—á–µ–Ω–∏–∫–∞–º)')
        else:
            text = message.text.split()
            with sqlite3.connect('school_db.sqlite') as db:
                cur = db.cursor()
                if text[1].lower() == '–≤—Å–µ':
                    for i in cur.execute("""SELECT student_id FROM students""").fetchall():
                        bot.send_message(i[0], ' '.join(text[2:]))
                else:
                    for i in cur.execute("""SELECT student_id FROM students
                                            WHERE class = ?""", (text[1].upper(),)).fetchall():
                        bot.send_message(i[0], ' '.join(text[2:]))
            if text[1].upper() in ['5–ê', '5–ë', '5–í.csv', '5–ì', '5–î', '6–ê', '6–ë', '6–í', '6–ì', '7–ê', '7–ë',
                                   '7–í', '7–ì', '8–ê', '8–ë', '8–í', '8–ì',
                                   '9–ê', '9–ë', '9–í', '9–ì', '10–ê', '11–ê', '–í–°–ï']:
                bot.send_message(message.chat.id, f'–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ {text[1]}')
            else:
                bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π')


@bot.message_handler(content_types=['document'])
def change_schedule(message):
    if is_user_admin(message.chat.id):
        file_info = bot.get_file(message.document.file_id)
        class_name = message.caption
        try:
            if class_name in ['5–ê', '5–ë', '5–í', '5–ì', '5–î', '6–ê', '6–ë', '6–í', '6–ì', '7–ê', '7–ë', '7–í', '7–ì', '8–ê', '8–ë',
                              '8–í', '8–ì', '9–ê', '9–ë', '9–í', '9–ì', '10–ê', '11–ê']:
                downloaded_file = bot.download_file(file_info.file_path)
                src = os.getcwd() + "\\" + message.document.file_name
                with open(src, mode='wb') as file:
                    file.write(downloaded_file)

                with open(src, encoding='utf-8') as file:
                    reader = csv.DictReader(file, delimiter=',')
                    schedule = []
                    for i in reader:
                        schedule.append(i)
                    f = open(f"schedules/{class_name}.csv", "w")
                    f.truncate()
                    f.close()
                    with open(f"schedules/{class_name}.csv", encoding='utf-8', mode='w') as file2:
                        writer = csv.DictWriter(file2, fieldnames=list(schedule[0].keys()), delimiter=',', quoting=csv.QUOTE_NONNUMERIC)
                        writer.writeheader()
                        for i in schedule:
                            writer.writerow(i)
                bot.send_message(message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {class_name} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!')
                os.remove(src)
            else:
                bot.send_message(message.chat.id, '–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–∞–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞.')
        except Exception:
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.')


@bot.message_handler(content_types='text')
def reply_message(message):
    if is_user_in_database(message.chat.id) or is_user_admin(message.chat.id):
        if message.text == '–ü–µ—Ä—Å–æ–Ω–∞–ªüßë‚Äçüè´':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            teachers = types.KeyboardButton("–£—á–∏—Ç–µ–ª—èüßë‚Äçüè´")
            administraition = types.KeyboardButton("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—èüè§")
            service = types.KeyboardButton("–û–±—Å–ª—É–∂–∏–≤–∞—é—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ªüßç")
            markup.add(teachers, administraition, service)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç: ', reply_markup=markup)

        elif message.text in ["–£—á–∏—Ç–µ–ª—èüßë‚Äçüè´", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—èüè§", "–û–±—Å–ª—É–∂–∏–≤–∞—é—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ªüßç"]:
            result_message = []
            info = {"–£—á–∏—Ç–µ–ª—èüßë‚Äçüè´": data.TEACHERS, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—èüè§": data.ADMINISTRATION,
                    "–û–±—Å–ª—É–∂–∏–≤–∞—é—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ªüßç": data.SERVICE}
            for num, (name, post) in enumerate(info[message.text].items()):
                result_message.append(f'{num + 1}. {name} \n {post}')
                result_message.append(' ')
            bot.send_message(message.chat.id, '\n'.join(result_message))
            start_buttons(message)

        elif message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏—èüìã":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            rings = types.KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤üîî")
            lessons = types.KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤üìö")
            markup.add(rings, lessons)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç: ', reply_markup=markup)

        elif message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤üîî":
            bot.send_message(message.chat.id, data.RINGS)
            start_buttons(message)

        elif message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤üìö":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(*list(types.KeyboardButton(f"{i}") for i in range(5, 12)))
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å: ', reply_markup=markup)

        elif message.text in ['5', '6', '7', '8', '9', '10', '11']:
            letters = {'5': '–ê–ë–í–ì–î', '6': '–ê–ë–í–ì', '7': '–ê–ë–í–ì', '8': '–ê–ë–í–ì', '9': '–ê–ë–í–ì', '10': '–ê', '11': '–ê'}
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(*list(types.KeyboardButton(f"{message.text}{i}") for i in letters[message.text]))
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å: ', reply_markup=markup)

        elif message.text in ['5–ê', '5–ë', '5–í', '5–ì', '5–î', '6–ê', '6–ë', '6–í', '6–ì', '7–ê', '7–ë', '7–í', '7–ì', '8–ê', '8–ë',
                              '8–í', '8–ì', '9–ê', '9–ë', '9–í', '9–ì', '10–ê', '11–ê']:
            days = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞']
            result_message = ''
            with open(f'schedules/{message.text}.csv', encoding='utf-8', mode='r') as csvfile:
                reader = csv.DictReader(csvfile, delimiter=',')
                subjects = list(reader)
                for i in range(5):
                    result_message += days[i] + ':' + '\n'
                    for index, j in enumerate(subjects):
                        result_message += str(index + 1) + '. ' + j[days[i]] + '\n'
                    result_message += '\n'
            bot.send_message(message.chat.id, result_message)
            start_buttons(message)

        elif message.text == "–ö–∞–±–∏–Ω–µ—Ç—ãüö™":
            bot.send_message(message.chat.id, '\n'.join(data.CABINETS))

        elif message.text == "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—èüóí":
            result = []
            for num, lesson in enumerate(data.ADDITIONAL):
                result.append(f"{num + 1}. {lesson}")
            bot.send_message(message.chat.id, '\n'.join(result))

        elif message.text == "–ù–æ–≤–æ—Å—Ç–∏üì∞":
            bot.send_message(message.chat.id, "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏: ")
            soup = BeautifulSoup(requests.get(URL).text, "html.parser")
            themes = [i.getText() for i in soup.find('div', {'class': 'span-14'}).find_all('h2')][1:4]
            text = [i.getText() for i in soup.find('div', {'class': 'span-14'}).find_all('p')][:3]
            links = [i.get('href') for i in soup.find('div', {'class': 'span-14'}).find_all('a')][::4]
            for i in range(3):
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏", url=links[i]))
                bot.send_message(message.chat.id, '\n'.join([f'*{themes[i]}*', '', text[i]]), reply_markup=markup,
                                 parse_mode="Markdown")

        elif message.text == "–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ‚ùó":
            bot.send_message(message.chat.id,
                             "–í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —Å –ø—Ä–æ–±–ª–µ–º–æ–π –Ω–∞ –ø–æ—á—Ç—É school11bot.problem@gmail.com\n"
                             "–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µüòâ")

        elif message.text == '–£–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Öüö´':
            with sqlite3.connect('school_db.sqlite') as db:
                cur = db.cursor()
                cur.execute("""DELETE from students WHERE student_id = ?""", (message.chat.id,))
                db.commit()
            bot.send_message(message.chat.id, '–í—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
            start_buttons(message)
        else:
            bot.send_message(message.chat.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é ‚òπ')
    else:
        if message.text in ['5–ê', '5–ë', '5–í.csv', '5–ì', '5–î', '6–ê', '6–ë', '6–í', '6–ì', '7–ê', '7–ë', '7–í', '7–ì', '8–ê',
                            '8–ë',
                            '8–í', '8–ì',
                            '9–ê', '9–ë', '9–í', '9–ì', '10–ê', '11–ê']:
            with sqlite3.connect('school_db.sqlite') as db:
                cur = db.cursor()
                cur.execute("""INSERT INTO students(student_id, class) VALUES (?, ?)""",
                            (message.chat.id, message.text,))
                db.commit()
            start_buttons(message)
        elif message.text in ['5', '6', '7', '8', '9', '10', '11']:
            letters = {'5': '–ê–ë–í–ì–î', '6': '–ê–ë–í–ì', '7': '–ê–ë–í–ì', '8': '–ê–ë–í–ì', '9': '–ê–ë–í–ì', '10': '–ê', '11': '–ê'}
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(*list(types.KeyboardButton(f"{message.text}{i}") for i in letters[message.text]))
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å: ', reply_markup=markup)


bot.infinity_polling()
